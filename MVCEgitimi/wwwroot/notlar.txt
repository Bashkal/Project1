Week 1 learning outcomes
----------------------------------------------------------------------------------------
C# Usage
-namespaces are eqivalent of packcages in java 
-have same primitive data type with java but instead of Sting it's defined with string
-if, else if, else  and switch usage are same too
-for and while loop has same Syntax
-instead of shorthand for used for arrays in java, in C# foreach can be used.
foreach(datatype VariableName in ArrayName){Console.WriteLine(VariableName);}
-access modifier return type methodname(paramters){code blocks}
-datatype[] arrayname = new datatype[length]
-try catch final have same syntax
-exeptions are same too with java
-List<datatype> listname = new List<datatype>();
-two little example written for the explain how they are work
-class usage same with java
-classname referenceName = new classname(initial values for variables);
-constructor definition same too

-getter and setter methods known under properties title

private datatype variablename;

public datatype  Variablename
{

	get{return variablename;}
	set{variablename=value;}
}

-abstract class and interface usage are same too with java
-to implement and extend a class ":" sign is used
-a class only extends one class(parent) but it can implement multiple interfaces

------------------------------------------------------------------------------------
Week 2 Learning Outcomes
------------------------------------------------------------------------------------

SQL Server and Database Usage
**************************************************************************************

SQL Server Basics
**************************************************************************************

--query
select parameter that are want to search (* for all parameters) from TableName
--to create database
create database DBNAME 
--to change database properties we use alter
--change the name of Database
alter database DBNAME Modify name = NEW_DBNAME
--Remove Database
drop database DBNAME
--adding tablo to database
use DBNAME
go
Create Table TABLENAME(COLUMN_NAME datatype not null/null[default],COLUMN_NAME2 datatype not null/null[default])
--edit table
--adding new column
Alter Table TABLENAME add New-ColumnName datatype not null/null[default]
--edit column
alter table TABLENAME alter ColumnName datatype not null/null[default]
--remove column from database
alter table TABLENAME drop column ColumnName
--CRUD Operations with sql commands
--add data to table
insert into TableName(ColumnName,ColumnName2) values (firstValue,secondValue)
insert into TableName values (all arguments for all parameters,for nullabe parameters null can be written)
--update table contents
update TableName set ColumnName = value,ColumnName2 = value2 if string '' used instead of c#""
it changed all elements for all saved data because we did not specify any filter
update TableName set ColumnName = value,ColumnName2 = value2 where ColumnName3= specific value that already set
--delete data from Table
delete from TableName where ColumnName= value that already setted before to specify
--Primary Key Usage
when it is assigned a column that colums value setted as not nullable and become unqiue
and it can not be setted for another element 
--Backup Database
BACKUP DATABASE DataBaseName TO Disk='path\fileName.bak'
--clear all data in table
Truncate table TableName
--drop a table
drop table TableName

****************************************************************************************************************
ADO.NET Windows Forms
*************************************************************************************

-look at the example to understand how it works

kullanıcı yetkisini dosyaya kaydet(departmanını) ardında listeleme sırasında 
bu yetkiye göre departman bazlı listeleme yap

admin page tasarla
authorize işlemleri burada olacak 

------------------------------------------------------------------------------------
Week 3 Learning Outcomes
------------------------------------------------------------------------------------
-html javascript ve css üzerine bilgiler edinme

------------------------------------------------------------------------------------
Week 4 Learning Outcomes
------------------------------------------------------------------------------------
MVC Model-View-Controller
model class represent the blue print of any model
view is the shown figure of mvc system it is the user interface
controller is the action part take requests and chose action

routing mechanism
web browser send request controller get it and give respond
controller/action/id(optional)